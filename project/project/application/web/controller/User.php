<?php
namespace app\web\controller;
use think\captcha\Captcha;
use think\Controller;
use think\Request;
use think\Session;
use think\Response;
use think\Db;
use app\web\model\User as UserModel;

class User extends Controller
{
    /**
     * 初始化 处理 (构造函数)
     */

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * 手动实例化验证码
     */
    public function captcha_img()
    {
        $captcha = new Captcha();
        return $captcha->entry();
    }



    /**
     * 渲染登录界面
     */
    public function login()
    {
        return $this->view->fetch();
    }


    /**
     * 登录验证
     */
    public function checkLogin(Request $request){


        $data=$request->param();//获取参数

        if(empty($data['name'])) {
            $this->error('账号不能为空！请输入账号');
        }

        if(empty($data['password'])) {
            $this->error('密码不能为空！请输入密码~');
        }
        $captcha = new Captcha();
        if (!$captcha->check($data['verify'])) {
            $this->error('验证码不正确!');
        }

       if( $data['juese'] == 0) { //普通用户登录
            $model = new \app\web\model\User();
            $result = $model->where(['name' => $data['name'], 'password' => $data['password']])->find();
        }else if( $data['juese'] == 1){ //教授用户登录
            $model = new \app\web\model\Professor();
           $result = $model->where(['name' => $data['name'], 'password' => $data['password']])->find();
        }

        if(!$result){
            $this->error('账号或密码错误！请重新输入~');
        }

        //删除密码
        unset($result['password']);

        //写入Session

        Session::set('userId', $result['id']);
        Session::set('userName', $result['name']);
        Session::set('role',$result['role']);
        Session::set('realname',$result{'realname'});
        Session::set('user_info', $model->getData());




        return Response::create(['code' => 1, 'msg' => '登录成功，点击【确定】进入~', 'data' => $result], 'JSON');
    }

    /**
     * 登出操作
     */
    public function logout()
    {
        Session::delete('userId');
        Session::delete('userName');
        Session::delete('role');
        Session::delete('realname');
        Session::delete('vip');
        Session::delete('user_info');
        $this ->success('注销登陆，正在返回','/web');
        return Response::create(['code' => 1, 'info' => '退出成功！'], 'json');
    }

    /**
     *普通用户注册界面
     */
    public function  adminAdd()
    {
        $this->view->assign('title','普通用户注册');
        $this->view->assign('keywords','');
        $this->view->assign('desc','');
        return $this->view->fetch('admin_add');
    }

    //检测用户名是否可用
    public function checkUserName(Request $request)
    {
        $userName = trim($request->param('name'));
        $status = 1;
        $message = '用户名可用';
        if (UserModel::get(['name' => $userName])) {
            //如果在表中查询到该用户名
            $status = 0;
            $message = '用户名重复,请重新输入~~';
        }
        return ['status' => $status, 'message' => $message];
    }


    //检测用户邮箱是否可用
    public function checkUserEmail(Request $request)
    {
        $userEmail = trim($request->param('email'));
        $status = 1;
        $message = '邮箱可用';
        if (UserModel::get(['email' => $userEmail])) {
            //查询表中找到了该邮箱,修改返回值
            $status = 0;
            $message = '邮箱重复,请重新输入~~';
        }
        return ['status' => $status, 'message' => $message];
    }

    //添加操作
    public function save(Request $request)
    {

        $data=input('post.');

        $code=Db::execute("insert into user value(null,:name,:password,:realname,:email,0,null,null,null)",$data);

        if($code){
            //跳转
            $this->success("添加成功",'/web');
        }else{
            $this->error("添加失败");
        }

    }

    //个人信息
    public function change()
    {
        $this->view->assign('title','修改个人信息');
        $this->view->assign('keywords','');
        $this->view->assign('desc','');

       $id = input('session.userId');
       $list = Db::table('user')->where('id',$id)->select();
       $this->assign('list',$list);

       $vip = input('session.vip');
       if($vip == 1){
           $vip = Db::table('user_vip')->where('user_id',$id)->select();
           $this->assign('vip',$vip);
       }

       return $this->fetch();

    }


    //更新数据操作
    public function editUser()
    {
        $id = input('session.userId');
        $password = input('post.password');
        $realname = input('post.realname');

        $result = Db::table('user')->where('id',$id)->update(['password'=>$password,'realname'=>$realname]);

        if($result){
            $this->success('修改成功');
        } else {
            $this->error('修改失败');
        }

    }


}


