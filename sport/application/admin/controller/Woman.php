<?php
namespace app\admin\controller;


use think\Db;
use think\Request;

use app\admin\model\Woman as WomanModel;




class Woman extends Base
{
    /**
     * 初始化 处理 (构造函数)
     */

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }



    /**
     * 渲染女运动员列表界面
     */
    public function index()
    {
//        $data=Db::table('woman')->where('sex',1)->find();
//        $this->assign("data", $data);
        $this->view->assign('title', '女运动员列表');
        $this->view->assign('keywords', '');
        $this->view->assign('desc', '');

        $this->view->count = WomanModel::count();//查询数据数量

        $list =WomanModel::paginate(8); //每页显示6条

        $this -> view -> assign('list', $list);
        //渲染管理员列表模板
        return $this->view->fetch('admin_list');
    }



    /**
     *渲染女运动员编辑界面
     */
    public function adminEdit(Request $request)
    {
        $user_id = $request -> param('id');
        $result = WomanModel::get($user_id);
        $this->view->assign('title','女运动员列表');
        $this->view->assign('keywords','女运动员列表');
        $this->view->assign('desc','女运动员列表');
        $this->view->assign('user_info',$result->getData());
        return $this->view->fetch('admin_edit');
    }


    /**
     *更新女运动员信息操作
     */
    //更新数据操作
    public function editUser(Request $request)
    {
        //获取表单返回的数据
//        $data = $request -> param();
        $param = $request->param();

        //去掉表单中为空的数据,即没有修改的内容
        foreach ($param as $key => $value) {
            if (!empty($value)) {
                $data[$key] = $value;
            }
        }

        $condition = ['id' => $data['id']];
        $result = WomanModel::update($data, $condition);




        if (true == $result) {
            return ['status' => 1, 'message' => '更新成功'];
        } else {
            return ['status' => 0, 'message' => '更新失败,请检查'];
        }
    }


    /**
     *删除女运动员操作
     */
    //删除操作
    public function deleteUser(Request $request)
    {
        $user_id = $request->param('id');
        WomanModel::update(['is_delete' => 1], ['id' => $user_id]);
        WomanModel::destroy($user_id);

    }


    /**
     *恢复删除操作
     */
    //恢复删除操作
    public function unDelete()
    {
        WomanModel::update(['delete_time' => NULL], ['is_delete' => 1]);
    }


    /**
     *渲染女运动员添加界面
     */
    //添加操作的界面
    public function  adminAdd()
    {
        $this->view->assign('title','添加女运动员');
        $this->view->assign('keywords','');
        $this->view->assign('desc','');
        return $this->view->fetch('admin_add');
    }


    /**
     *添加女运动员操作
     */
    //添加操作
    public function save(Request $request)
    {
//
        $data=input('post.');
//        dump($data);
        $code=Db::execute("insert into woman value(null,1,:name,:password,:realname,0,:stu_num,:tel,:grade,:spe,:class,'未报名',0,'暂未设置','未报名',0,'暂未设置','未报名',0,'暂未设置','未报名',0,'暂未设置','未报名',0,'暂未设置','未报名',0,'暂未设置','未报名',0,'暂未设置','未报名',0,'暂未设置','未报名',0,'暂未设置','未报名',0,'暂未设置',null,null,null)",$data);

        if($code){
            //跳转
            $this->success("添加成功");
        }else{
            $this->error("添加失败");
        }

    }


    /**
     *检测女运动员学号是否可用
     */
    //检测学号是否可用
    public function checkStuNum(Request $request)
    {
        $userNum = trim($request->param('stu_num'));
        $status = 1;
        $message = '学号可用';
        if (WomanModel::get(['stu_num' => $userNum])) {
            //如果在表中查询到该学号
            $status = 0;
            $message = '学号重复,请重新输入~~';
        }
        return ['status' => $status, 'message' => $message];
    }


    /**
     *渲染女运动员成绩列表界面
     */
    //100米成绩列表界面
    public function ranking1()
    {
        $this->view->assign('title','100米成绩列表');
        $this->view->assign('keyword','');
        $this->view->assign('desc','');

        $list=Db::table('woman')->where('art1','100米')->select();
        $this -> view -> assign('list', $list);

        return $this->view->fetch('ranking1');
    }

    //200米成绩列表界面
    public function ranking2()
    {
        $this->view->assign('title','200米成绩列表');
        $this->view->assign('keyword','');
        $this->view->assign('desc','');

        $list=Db::table('woman')->where('art2','200米')->select();
        $this -> view -> assign('list', $list);

        return $this->view->fetch('ranking2');
    }

    //400米成绩列表界面
    public function ranking3()
    {
        $this->view->assign('title','400米成绩列表');
        $this->view->assign('keyword','');
        $this->view->assign('desc','');

        $list=Db::table('woman')->where('art3','400米')->select();
        $this -> view -> assign('list', $list);

        return $this->view->fetch('ranking3');
    }

    //800米成绩列表界面
    public function ranking4()
    {
        $this->view->assign('title','800米成绩列表');
        $this->view->assign('keyword','');
        $this->view->assign('desc','');

        $list=Db::table('woman')->where('art4','800米')->select();
        $this -> view -> assign('list', $list);

        return $this->view->fetch('ranking4');
    }

    //1500米成绩列表界面
    public function ranking5()
    {
        $this->view->assign('title','1500米成绩列表');
        $this->view->assign('keyword','');
        $this->view->assign('desc','');

        $list=Db::table('woman')->where('art5','1500米')->select();
        $this -> view -> assign('list', $list);

        return $this->view->fetch('ranking5');
    }

    //实心球成绩列表界面
    public function ranking6()
    {
        $this->view->assign('title','实心球成绩列表');
        $this->view->assign('keyword','');
        $this->view->assign('desc','');

        $list=Db::table('woman')->where('art6','实心球')->select();
        $this -> view -> assign('list', $list);

        return $this->view->fetch('ranking6');
    }

    //铅球（7.26KG）米成绩列表界面
    public function ranking7()
    {
        $this->view->assign('title','100米成绩列表');
        $this->view->assign('keyword','');
        $this->view->assign('desc','');

        $list=Db::table('woman')->where('art7','铅球（7.26KG）')->select();
        $this -> view -> assign('list', $list);

        return $this->view->fetch('ranking7');
    }

    //跳远成绩列表界面
    public function ranking8()
    {
        $this->view->assign('title','跳远成绩列表');
        $this->view->assign('keyword','');
        $this->view->assign('desc','');

        $list=Db::table('woman')->where('art8','跳远')->select();
        $this -> view -> assign('list', $list);

        return $this->view->fetch('ranking8');
    }

    //三级跳远成绩列表界面
    public function ranking9()
    {
        $this->view->assign('title','三级跳远成绩列表');
        $this->view->assign('keyword','');
        $this->view->assign('desc','');

        $list=Db::table('woman')->where('art9','三级跳远')->select();
        $this -> view -> assign('list', $list);

        return $this->view->fetch('ranking9');
    }

    //跳高成绩列表界面
    public function ranking10()
    {
        $this->view->assign('title','跳高成绩列表');
        $this->view->assign('keyword','');
        $this->view->assign('desc','');

        $list=Db::table('woman')->where('art10','跳高')->select();
        $this -> view -> assign('list', $list);

        return $this->view->fetch('ranking10');
    }



    /**
     *渲染女运动员成绩更改界面
     */
    //100米成绩更改界面
    public function changeScore1(Request $request)
    {
        $user_id = $request -> param('id');
        $result = WomanModel::get($user_id);
        $this->view->assign('title','成绩更改界面');
        $this->view->assign('keywords','');
        $this->view->assign('desc','');
        $this->view->assign('user_info',$result->getData());
        return $this->view->fetch('changeScore1');
    }

    //200米成绩更改界面
    public function changeScore2(Request $request)
    {
        $user_id = $request -> param('id');
        $result = WomanModel::get($user_id);
        $this->view->assign('title','成绩更改界面');
        $this->view->assign('keywords','');
        $this->view->assign('desc','');
        $this->view->assign('user_info',$result->getData());
        return $this->view->fetch('changeScore2');
    }

    //400米成绩更改界面
    public function changeScore3(Request $request)
    {
        $user_id = $request -> param('id');
        $result = WomanModel::get($user_id);
        $this->view->assign('title','成绩更改界面');
        $this->view->assign('keywords','');
        $this->view->assign('desc','');
        $this->view->assign('user_info',$result->getData());
        return $this->view->fetch('changeScore3');
    }

    //800米成绩更改界面
    public function changeScore4(Request $request)
    {
        $user_id = $request -> param('id');
        $result = WomanModel::get($user_id);
        $this->view->assign('title','成绩更改界面');
        $this->view->assign('keywords','');
        $this->view->assign('desc','');
        $this->view->assign('user_info',$result->getData());
        return $this->view->fetch('changeScore4');
    }

    //1500米成绩更改界面
    public function changeScore5(Request $request)
    {
        $user_id = $request -> param('id');
        $result = WomanModel::get($user_id);
        $this->view->assign('title','成绩更改界面');
        $this->view->assign('keywords','');
        $this->view->assign('desc','');
        $this->view->assign('user_info',$result->getData());
        return $this->view->fetch('changeScore5');
    }

    //实心球成绩更改界面
    public function changeScore6(Request $request)
    {
        $user_id = $request -> param('id');
        $result = WomanModel::get($user_id);
        $this->view->assign('title','成绩更改界面');
        $this->view->assign('keywords','');
        $this->view->assign('desc','');
        $this->view->assign('user_info',$result->getData());
        return $this->view->fetch('changeScore6');
    }

    //铅球（7.26KG）米成绩更改界面
    public function changeScore7(Request $request)
    {
        $user_id = $request -> param('id');
        $result = WomanModel::get($user_id);
        $this->view->assign('title','成绩更改界面');
        $this->view->assign('keywords','');
        $this->view->assign('desc','');
        $this->view->assign('user_info',$result->getData());
        return $this->view->fetch('changeScore7');
    }

    //跳远成绩更改界面
    public function changeScore8(Request $request)
    {
        $user_id = $request -> param('id');
        $result = WomanModel::get($user_id);
        $this->view->assign('title','成绩更改界面');
        $this->view->assign('keywords','');
        $this->view->assign('desc','');
        $this->view->assign('user_info',$result->getData());
        return $this->view->fetch('changeScore8');
    }

    //三级跳远成绩更改界面
    public function changeScore9(Request $request)
    {
        $user_id = $request -> param('id');
        $result = WomanModel::get($user_id);
        $this->view->assign('title','成绩更改界面');
        $this->view->assign('keywords','');
        $this->view->assign('desc','');
        $this->view->assign('user_info',$result->getData());
        return $this->view->fetch('changeScore9');
    }

    //跳高成绩更改界面
    public function changeScore10(Request $request)
    {
        $user_id = $request -> param('id');
        $result = WomanModel::get($user_id);
        $this->view->assign('title','成绩更改界面');
        $this->view->assign('keywords','');
        $this->view->assign('desc','');
        $this->view->assign('user_info',$result->getData());
        return $this->view->fetch('changeScore10');
    }



    /**
     * 更新女运动员成绩操作
     */
//更新女运动员成绩
    public function changeScore_edit(Request $request)
    {
        //获取表单返回的数据
//        $data = $request -> param();
        $param = $request->param();

        //去掉表单中为空的数据,即没有修改的内容
        foreach ($param as $key => $value) {
            if (!empty($value)) {
                $data[$key] = $value;
            }
        }

        $condition = ['id' => $data['id']];
        $result = WomanModel::update($data, $condition);



        if (true == $result) {
            return ['status' => 1, 'message' => '更新成功'];
        } else {
            return ['status' => 0, 'message' => '更新失败,请检查'];
        }
    }



    /**
     * 渲染女子项目赛程表界面
     */
    //女子项目赛程表
    public function time()
    {
        $this->view->assign('title','比赛时间列表');
        $this->view->assign('keyword','');
        $this->view->assign('desc','');

        $list1=Db::table('woman')->where('art1','100米')->limit(1)->select();
        $this -> view -> assign('list1', $list1);

        $list2=Db::table('woman')->where('art2','200米')->limit(1)->select();
        $this -> view -> assign('list2', $list2);

        $list3=Db::table('woman')->where('art3','400米')->limit(1)->select();
        $this -> view -> assign('list3', $list3);

        $list4=Db::table('woman')->where('art4','800米')->limit(1)->select();
        $this -> view -> assign('list4', $list4);

        $list5=Db::table('woman')->where('art5','1500米')->limit(1)->select();
        $this -> view -> assign('list5', $list5);

        $list6=Db::table('woman')->where('art6','实心球')->limit(1)->select();
        $this -> view -> assign('list6', $list6);

        $list7=Db::table('woman')->where('art7','铅球（7.26KG）')->limit(1)->select();
        $this -> view -> assign('list7', $list7);

        $list8=Db::table('woman')->where('art8','跳远')->limit(1)->select();
        $this -> view -> assign('list8', $list8);

        $list9=Db::table('woman')->where('art9','三级跳远')->limit(1)->select();
        $this -> view -> assign('list9', $list9);

        $list10=Db::table('woman')->where('art10','跳高')->limit(1)->select();
        $this -> view -> assign('list10', $list10);

        return $this->view->fetch('time_list');
    }



    /**
     *(渲染女子项目赛程表修改界面   及   修改女子项目赛程表操作
     */
    //100米比赛时间修改
    public function changeTime1(Request $request)
    {
        $user_id = $request -> param('id');
        $result = WomanModel::get($user_id);
        $this->view->assign('title','成绩更改界面');
        $this->view->assign('keywords','');
        $this->view->assign('desc','');
        $this->view->assign('user_info',$result->getData());
        return $this->view->fetch('changeTime1');
    }
    //更新100米比赛时间界面
    public function changeTime_edit1(Request $request)
    {
        //获取表单返回的数据
        $param = $request->param();
        //去掉表单中为空的数据,即没有修改的内容
        foreach ($param as $key => $value) {
            if (!empty($value)) {
                $data[$key] = $value;
            }
        }
        $result = WomanModel::where('art1','=','100米')->update([
            'time1'=>$data['time1']
        ]);
        if (true == $result) {
            return ['status' => 1, 'message' => '更新成功'];
        } else {
            return ['status' => 0, 'message' => '更新失败,请检查'];
        }
    }

    //200米比赛时间修改界面
    public function changeTime2(Request $request)
    {
        $user_id = $request -> param('id');
        $result = WomanModel::get($user_id);
        $this->view->assign('title','成绩更改界面');
        $this->view->assign('keywords','');
        $this->view->assign('desc','');
        $this->view->assign('user_info',$result->getData());
        return $this->view->fetch('changeTime2');
    }
    //更新200米比赛时间
    public function changeTime_edit2(Request $request)
    {
        //获取表单返回的数据
        $param = $request->param();
        //去掉表单中为空的数据,即没有修改的内容
        foreach ($param as $key => $value) {
            if (!empty($value)) {
                $data[$key] = $value;
            }
        }
        $result = WomanModel::where('art2','=','200米')->update([
            'time2'=>$data['time2']
        ]);
        if (true == $result) {
            return ['status' => 1, 'message' => '更新成功'];
        } else {
            return ['status' => 0, 'message' => '更新失败,请检查'];
        }
    }

    //400米比赛时间修改
    public function changeTime3(Request $request)
    {
        $user_id = $request -> param('id');
        $result = WomanModel::get($user_id);
        $this->view->assign('title','成绩更改界面');
        $this->view->assign('keywords','');
        $this->view->assign('desc','');
        $this->view->assign('user_info',$result->getData());
        return $this->view->fetch('changeTime3');
    }
    //更新400米比赛时间
    public function changeTime_edit3(Request $request)
    {
        //获取表单返回的数据
        $param = $request->param();
        //去掉表单中为空的数据,即没有修改的内容
        foreach ($param as $key => $value) {
            if (!empty($value)) {
                $data[$key] = $value;
            }
        }
        $result = WomanModel::where('art3','=','400米')->update([
            'time3'=>$data['time3']
        ]);
        if (true == $result) {
            return ['status' => 1, 'message' => '更新成功'];
        } else {
            return ['status' => 0, 'message' => '更新失败,请检查'];
        }
    }

    //800米比赛时间修改
    public function changeTime4(Request $request)
    {
        $user_id = $request -> param('id');
        $result = WomanModel::get($user_id);
        $this->view->assign('title','成绩更改界面');
        $this->view->assign('keywords','');
        $this->view->assign('desc','');
        $this->view->assign('user_info',$result->getData());
        return $this->view->fetch('changeTime4');
    }
    //更新100米比赛时间
    public function changeTime_edit4(Request $request)
    {
        //获取表单返回的数据
        $param = $request->param();
        //去掉表单中为空的数据,即没有修改的内容
        foreach ($param as $key => $value) {
            if (!empty($value)) {
                $data[$key] = $value;
            }
        }
        $result = WomanModel::where('art4','=','800米')->update([
            'time4'=>$data['time4']
        ]);
        if (true == $result) {
            return ['status' => 1, 'message' => '更新成功'];
        } else {
            return ['status' => 0, 'message' => '更新失败,请检查'];
        }
    }

    //1500米比赛时间修改
    public function changeTime5(Request $request)
    {
        $user_id = $request -> param('id');
        $result = WomanModel::get($user_id);
        $this->view->assign('title','成绩更改界面');
        $this->view->assign('keywords','');
        $this->view->assign('desc','');
        $this->view->assign('user_info',$result->getData());
        return $this->view->fetch('changeTime5');
    }
    //更新1500米比赛时间
    public function changeTime_edit5(Request $request)
    {
        //获取表单返回的数据
        $param = $request->param();
        //去掉表单中为空的数据,即没有修改的内容
        foreach ($param as $key => $value) {
            if (!empty($value)) {
                $data[$key] = $value;
            }
        }
        $result = WomanModel::where('art5','=','1500米')->update([
            'time5'=>$data['time5']
        ]);
        if (true == $result) {
            return ['status' => 1, 'message' => '更新成功'];
        } else {
            return ['status' => 0, 'message' => '更新失败,请检查'];
        }
    }

    //实心球比赛时间修改
    public function changeTime6(Request $request)
    {
        $user_id = $request -> param('id');
        $result = WomanModel::get($user_id);
        $this->view->assign('title','成绩更改界面');
        $this->view->assign('keywords','');
        $this->view->assign('desc','');
        $this->view->assign('user_info',$result->getData());
        return $this->view->fetch('changeTime6');
    }
    //更新实心球比赛时间
    public function changeTime_edit6(Request $request)
    {
        //获取表单返回的数据
        $param = $request->param();
        //去掉表单中为空的数据,即没有修改的内容
        foreach ($param as $key => $value) {
            if (!empty($value)) {
                $data[$key] = $value;
            }
        }
        $result = WomanModel::where('art6','=','实心球')->update([
            'time6'=>$data['time6']
        ]);
        if (true == $result) {
            return ['status' => 1, 'message' => '更新成功'];
        } else {
            return ['status' => 0, 'message' => '更新失败,请检查'];
        }
    }

    //铅球（7.26KG）比赛时间修改
    public function changeTime7(Request $request)
    {
        $user_id = $request -> param('id');
        $result = WomanModel::get($user_id);
        $this->view->assign('title','成绩更改界面');
        $this->view->assign('keywords','');
        $this->view->assign('desc','');
        $this->view->assign('user_info',$result->getData());
        return $this->view->fetch('changeTime7');
    }
    //更新铅球（7.26KG）比赛时间
    public function changeTime_edit7(Request $request)
    {
        //获取表单返回的数据
        $param = $request->param();
        //去掉表单中为空的数据,即没有修改的内容
        foreach ($param as $key => $value) {
            if (!empty($value)) {
                $data[$key] = $value;
            }
        }
        $result = WomanModel::where('art7','=','铅球（7.26KG）')->update([
            'time7'=>$data['time7']
        ]);
        if (true == $result) {
            return ['status' => 1, 'message' => '更新成功'];
        } else {
            return ['status' => 0, 'message' => '更新失败,请检查'];
        }
    }

    //跳远比赛时间修改
    public function changeTime8(Request $request)
    {
        $user_id = $request -> param('id');
        $result = WomanModel::get($user_id);
        $this->view->assign('title','成绩更改界面');
        $this->view->assign('keywords','');
        $this->view->assign('desc','');
        $this->view->assign('user_info',$result->getData());
        return $this->view->fetch('changeTime8');
    }
    //更新跳远比赛时间
    public function changeTime_edit8(Request $request)
    {
        //获取表单返回的数据
        $param = $request->param();
        //去掉表单中为空的数据,即没有修改的内容
        foreach ($param as $key => $value) {
            if (!empty($value)) {
                $data[$key] = $value;
            }
        }
        $result = WomanModel::where('art8','=','跳远')->update([
            'time8'=>$data['time8']
        ]);
        if (true == $result) {
            return ['status' => 1, 'message' => '更新成功'];
        } else {
            return ['status' => 0, 'message' => '更新失败,请检查'];
        }
    }

    //三级跳远比赛时间修改
    public function changeTime9(Request $request)
    {
        $user_id = $request -> param('id');
        $result = WomanModel::get($user_id);
        $this->view->assign('title','成绩更改界面');
        $this->view->assign('keywords','');
        $this->view->assign('desc','');
        $this->view->assign('user_info',$result->getData());
        return $this->view->fetch('changeTime9');
    }
    //更新三级跳远比赛时间
    public function changeTime_edit9(Request $request)
    {
        //获取表单返回的数据
        $param = $request->param();
        //去掉表单中为空的数据,即没有修改的内容
        foreach ($param as $key => $value) {
            if (!empty($value)) {
                $data[$key] = $value;
            }
        }
        $result = WomanModel::where('art9','=','三级跳远')->update([
            'time9'=>$data['time9']
        ]);
        if (true == $result) {
            return ['status' => 1, 'message' => '更新成功'];
        } else {
            return ['status' => 0, 'message' => '更新失败,请检查'];
        }
    }

    //跳高比赛时间修改
    public function changeTime10(Request $request)
    {
        $user_id = $request -> param('id');
        $result = WomanModel::get($user_id);
        $this->view->assign('title','成绩更改界面');
        $this->view->assign('keywords','');
        $this->view->assign('desc','');
        $this->view->assign('user_info',$result->getData());
        return $this->view->fetch('changeTime10');
    }
    //更新跳高米比赛时间
    public function changeTime_edit10(Request $request)
    {
        //获取表单返回的数据
        $param = $request->param();
        //去掉表单中为空的数据,即没有修改的内容
        foreach ($param as $key => $value) {
            if (!empty($value)) {
                $data[$key] = $value;
            }
        }
        $result = WomanModel::where('art10','=','跳高')->update([
            'time10'=>$data['time10']
        ]);
        if (true == $result) {
            return ['status' => 1, 'message' => '更新成功'];
        } else {
            return ['status' => 0, 'message' => '更新失败,请检查'];
        }
    }


    /**
     * 渲染女子项目报名情况界面
     */
    public function situation1()
    {
        $this->view->assign('title', '100米报名情况');
        $this->view->assign('keywords', '');
        $this->view->assign('desc', '');

        $this->view->count = Db::table('woman')->where('art1','100米')->count();//查询数据数量

        $list = Db::table('woman')->where('art1','100米')->select();

        $this -> view -> assign('list', $list);

        return $this->view->fetch('situation1');
    }
    public function situation2()
    {
        $this->view->assign('title', '200米报名情况');
        $this->view->assign('keywords', '');
        $this->view->assign('desc', '');

        $this->view->count = Db::table('woman')->where('art2','200米')->count();//查询数据数量

        $list = Db::table('woman')->where('art2','200米')->select();

        $this -> view -> assign('list', $list);

        return $this->view->fetch('situation2');
    }
    public function situation3()
    {
        $this->view->assign('title', '400米报名情况');
        $this->view->assign('keywords', '');
        $this->view->assign('desc', '');

        $this->view->count = Db::table('woman')->where('art3','400米')->count();//查询数据数量

        $list = Db::table('woman')->where('art3','400米')->select();

        $this -> view -> assign('list', $list);

        return $this->view->fetch('situation3');
    }
    public function situation4()
    {
        $this->view->assign('title', '800米报名情况');
        $this->view->assign('keywords', '');
        $this->view->assign('desc', '');

        $this->view->count = Db::table('woman')->where('art4','800米')->count();//查询数据数量

        $list = Db::table('woman')->where('art4','800米')->select();

        $this -> view -> assign('list', $list);

        return $this->view->fetch('situation4');
    }
    public function situation5()
    {
        $this->view->assign('title', '1500米报名情况');
        $this->view->assign('keywords', '');
        $this->view->assign('desc', '');

        $this->view->count = Db::table('woman')->where('art5','1500米')->count();//查询数据数量

        $list = Db::table('woman')->where('art5','1500米')->select();

        $this -> view -> assign('list', $list);

        return $this->view->fetch('situation5');
    }
    public function situation6()
    {
        $this->view->assign('title', '实心球报名情况');
        $this->view->assign('keywords', '');
        $this->view->assign('desc', '');

        $this->view->count = Db::table('woman')->where('art6','实心球')->count();//查询数据数量

        $list = Db::table('woman')->where('art6','实心球')->select();

        $this -> view -> assign('list', $list);

        return $this->view->fetch('situation6');
    }
    public function situation7()
    {
        $this->view->assign('title', '铅球（7.26KG）报名情况');
        $this->view->assign('keywords', '');
        $this->view->assign('desc', '');

        $this->view->count = Db::table('woman')->where('art7','铅球（7.26KG）')->count();//查询数据数量

        $list = Db::table('woman')->where('art7','铅球（7.26KG）')->select();

        $this -> view -> assign('list', $list);

        return $this->view->fetch('situation7');
    }
    public function situation8()
    {
        $this->view->assign('title', '跳远报名情况');
        $this->view->assign('keywords', '');
        $this->view->assign('desc', '');

        $this->view->count = Db::table('woman')->where('art8','跳远')->count();//查询数据数量

        $list = Db::table('woman')->where('art8','跳远')->select();

        $this -> view -> assign('list', $list);

        return $this->view->fetch('situation8');
    }
    public function situation9()
    {
        $this->view->assign('title', '三级跳远报名情况');
        $this->view->assign('keywords', '');
        $this->view->assign('desc', '');

        $this->view->count = Db::table('woman')->where('art9','三级跳远')->count();//查询数据数量

        $list = Db::table('woman')->where('art9','三级跳远')->select();

        $this -> view -> assign('list', $list);

        return $this->view->fetch('situation9');
    }
    public function situation10()
    {
        $this->view->assign('title', '跳高报名情况');
        $this->view->assign('keywords', '');
        $this->view->assign('desc', '');

        $this->view->count = Db::table('woman')->where('art10','跳高')->count();//查询数据数量

        $list = Db::table('woman')->where('art10','跳高')->select();

        $this -> view -> assign('list', $list);

        return $this->view->fetch('situation10');
    }



    /**
     * 渲染女子项目历史记录界面
     */
    public function history()
    {
        $this->view->assign('title', '女子项目历史记录');
        $this->view->assign('keywords', '');
        $this->view->assign('desc', '');

        //100米最好成绩
        $list1 = Db::table('woman')->where('score1 > 0')->order("score1 asc")->limit(1)->find();
        //插入数据库man_history中
        Db::table('woman_history')->insert($list1);
        $data1 = Db::table('woman_history')->where('score1 > 0')->order("score1 asc")->limit(1)->select();
        $this -> view -> assign('data1', $data1);

        //200米最好成绩
        $list2 = Db::table('woman')->where('score2 > 0')->order("score2 asc")->limit(1)->find();
        //插入数据库man_history中
        Db::table('woman_history')->insert($list2);
        $data2 = Db::table('woman_history')->where('score2 > 0')->order("score2 asc")->limit(1)->select();
        $this -> view -> assign('data2', $data2);

        //400米最好成绩
        $list3 = Db::table('woman')->where('score3 > 0')->order("score3 asc")->limit(1)->find();
        //插入数据库man_history中
        Db::table('woman_history')->insert($list3);
        $data3 = Db::table('woman_history')->where('score3 > 0')->order("score3 asc")->limit(1)->select();
        $this -> view -> assign('data3', $data3);

        //800米最好成绩
        $list4 = Db::table('woman')->where('score4 > 0')->order("score4 asc")->limit(1)->find();
        //插入数据库man_history中
        Db::table('woman_history')->insert($list4);
        $data4 = Db::table('woman_history')->where('score4 > 0')->order("score4 asc")->limit(1)->select();
        $this -> view -> assign('data4', $data4);

        //1500米最好成绩
        $list5 = Db::table('woman')->where('score5 > 0')->order("score5 asc")->limit(1)->find();
        //插入数据库man_history中
        Db::table('woman_history')->insert($list5);
        $data5 = Db::table('woman_history')->where('score5 > 0')->order("score5 asc")->limit(1)->select();
        $this -> view -> assign('data5', $data5);

        //实心球最好成绩
        $list6 = Db::table('woman')->where('score6 > 0')->order("score6 asc")->limit(1)->find();
        //插入数据库man_history中
        Db::table('woman_history')->insert($list6);
        $data6 = Db::table('woman_history')->where('score6 > 0')->order("score6 asc")->limit(1)->select();
        $this -> view -> assign('data6', $data6);

        //铅球（7.26KG）最好成绩
        $list7 = Db::table('woman')->where('score7 > 0')->order("score7 asc")->limit(1)->find();
        //插入数据库man_history中
        Db::table('woman_history')->insert($list7);
        $data7 = Db::table('woman_history')->where('score7 > 0')->order("score7 asc")->limit(1)->select();
        $this -> view -> assign('data7', $data7);

        //跳远最好成绩
        $list8 = Db::table('woman')->where('score8 > 0')->order("score8 asc")->limit(1)->find();
        //插入数据库man_history中
        Db::table('woman_history')->insert($list8);
        $data8 = Db::table('woman_history')->where('score8 > 0')->order("score8 asc")->limit(1)->select();
        $this -> view -> assign('data8', $data8);

        //三级跳远最好成绩
        $list9 = Db::table('woman')->where('score9 > 0')->order("score9 asc")->limit(1)->find();
        //插入数据库man_history中
        Db::table('woman_history')->insert($list9);
        $data9 = Db::table('woman_history')->where('score9 > 0')->order("score9 asc")->limit(1)->select();
        $this -> view -> assign('data9', $data9);

        //跳高最好成绩
        $list10 = Db::table('woman')->where('score10 > 0')->order("score10 asc")->limit(1)->find();
        //插入数据库man_history中
        Db::table('woman_history')->insert($list10);
        $data10 = Db::table('woman_history')->where('score10 > 0')->order("score10 asc")->limit(1)->select();
        $this -> view -> assign('data10', $data10);

        return $this->fetch('woman_history');
    }

}

