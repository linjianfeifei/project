<?php
namespace app\index\controller;

use think\Session;
use think\Request;
use think\Response;
use think\Db;
use think\captcha\Captcha;
use app\index\model\Man as ManModel;
use app\index\model\Woman as WomanModel;
use app\index\model\Leader as LeaderModel;

class Topman extends Base
{
    /**
     * 初始化 处理 (构造函数)
     */

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * 渲染登陆页面
     */
    public function login()
    {
        $this->alreadyLogin();
        if (Session::get('userId') > 0) {
            $this->error('请勿重复登陆!');
        }
        return $this->fetch();
    }

    /**
     * 登陆操作
     */
    public function checkLogin(Request $request)
    {
        $data = $request->param();//获取参数

        if (empty($data['name'])) {
            $this->error('用户账号不能为空!');
        }
        if (empty($data['password'])) {
            $this->error('密码不能为空!');
        }

        $captcha = new Captcha();
        if (!$captcha->check($data['verify'])) {
            $this->error('验证码不正确!');
        }

        if( $data['juese'] == 1) { //男运动员登录
            $model = new \app\index\model\Man();
            $result = $model->where(['name' => $data['name'], 'password' => $data['password']])->find();
        }else if( $data['juese'] == 2){ //女运动员登录
            $model = new \app\index\model\Woman();
            $result = $model->where(['name' => $data['name'], 'password' => $data['password']])->find();
        }else if( $data['juese'] == 3){ //领队登录
            $model = new \app\index\model\Leader();
            $result = $model->where(['name' => $data['name'], 'password' => $data['password']])->find();
        }else if( $data['juese'] == 4){ //裁判员登录
            $model = new \app\index\model\Judgment();
            $result = $model->where(['name' => $data['name'], 'password' => $data['password']])->find();
            Session::set('art',$result['art']);//写入Session，分配成绩录入权限
        }else if( $data['juese'] == 0){ //裁判登录
            $model = new \app\index\model\Topman();
            $result = $model->where(['name' => $data['name'], 'password' => $data['password']])->find();
        }

        if (!$result) {
            $this->error('账号或密码错误，请重新输入!');
        }
        //删除密码
        unset($result['password']);

        //写入session
        Session::set('userId', $result['id']);
        Session::set('userName', $result['name']);
        Session::set('role',$result['role']);


        return Response::create(['code' => 1, 'msg' => '登录成功，点击【确定】进入~', 'data' => $result], 'JSON');




    }



    /**
     * 登出操作
     */
    public function logout()
    {
        Session::delete('userId');
        Session::delete('userName');
        Session::delete('role');
        Session::delete('art');
        $this ->success('注销登陆，正在返回','topman/login');
        return Response::create(['code' => 1, 'info' => '退出成功！'], 'json');
    }

    /**
     * 实例化验证码
     */
    public function captcha_img()
    {
        $captcha = new Captcha();
        return $captcha->entry();
    }

    /**
     *渲染用户注册界面
     */
    public function  zhuce()
    {
        $this->view->assign('title','用户注册');
        $this->view->assign('keywords','');
        $this->view->assign('desc','');
        return $this->view->fetch('zhuce');
    }


    /**
     * 用户注册操作
     */
    //添加操作
    public function save(Request $request)
    {
        $data=input('post.');

        if( $data['juese'] == 1) { //男运动员注册
            $code = Db::execute("insert into man value(null,:juese,:name,:password,:realname,1,:stu_num,:tel,:grade,:spe,:class,'未报名','未有成绩','暂未设置','未报名','未有成绩','暂未设置','未报名','未有成绩','暂未设置','未报名','未有成绩','暂未设置','未报名','未有成绩','暂未设置','未报名','未有成绩','暂未设置','未报名','未有成绩','暂未设置','未报名','未有成绩','暂未设置','未报名','未有成绩','暂未设置','未报名','未有成绩','暂未设置',null,null,null)", $data);
        }else if( $data['juese'] == 2) { //女运动员注册
            $code = Db::execute("insert into woman value(null,:juese,:name,:password,:realname,0,:stu_num,:tel,:grade,:spe,:class,'未报名','未有成绩','暂未设置','未报名','未有成绩','暂未设置','未报名','未有成绩','暂未设置','未报名','未有成绩','暂未设置','未报名','未有成绩','暂未设置','未报名','未有成绩','暂未设置','未报名','未有成绩','暂未设置','未报名','未有成绩','暂未设置','未报名','未有成绩','暂未设置','未报名','未有成绩','暂未设置',null,null,null)", $data);
        }else if( $data['juese'] == 3) { //领队注册
            $code = Db::execute("insert into leader value(null,:juese,:name,:password,:realname,:stu_num,:tel,:grade,:spe,:class,null,null,null,null,null,null,null,null,'未报名','未有成绩','暂未设置','未报名','未有成绩','暂未设置',null,null,null)", $data);
        }

            if ($code) {
                //跳转
                $this->success("注册成功", 'topman/login');
            } else {
                $this->error("添加失败");
            }
    }


    /**
     * 检测学号是否可用
     */
    //检测学号是否可用
    public function checkStuNum(Request $request)
    {

        $userNum = trim($request->param('stu_num'));
        $status = 1;
        $message = '学号可用';
        //从三个表中的学号进行检测
        if (ManModel::get(['stu_num' => $userNum])) {
            //如果在表中查询到该学号
            $status = 0;
            $message = '学号重复,请重新输入~~';
        }elseif(WomanModel::get(['stu_num' => $userNum])){
            $status = 0;
            $message = '学号重复,请重新输入~~';
        }elseif(LeaderModel::get(['stu_num' => $userNum])){
            $status = 0;
            $message = '学号重复,请重新输入~~';
        }

        return ['status' => $status, 'message' => $message];

    }

}
